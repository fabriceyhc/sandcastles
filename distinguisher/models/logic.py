import guidance
from guidance import gen, select, user, system, assistant, instruction
from distinguisher.models.base import Distinguisher

class LogicSimplest(Distinguisher):
    @staticmethod
    @guidance
    def prompt_fn(lm, persona, **kwargs):
        if persona:
            with system():
                lm += f"{persona}"
        with user():
            lm += f"""
            ### Task Description:
            Modified text: {kwargs["P"]}
            ___________________________________________________________
            Original response A: {kwargs["A"]}
            __________________________________________________________
            Original response B: {kwargs["B"]}
            __________________________________________________________
            Which response does the modified text come from?
            """
        with assistant():
            lm += f"""\
            I compared the modified text's key themes, structure, and specific details with those in the original responses to identify the closest match.
            I analyzed the modified text for unique details including key words and phrases that are present in one of the original responses.
            I believe the modified text was derived from original response {select(["A", "B"], name="choice")}.
            """
        return lm

    @property
    def input_keys(self):
        return ["P"]

    @property
    def output_keys(self):
        return ["choice"]

class LogicSimple(Distinguisher):
    @staticmethod
    @guidance
    def prompt_fn(lm, persona, **kwargs):
        if persona:
            with system():
                lm += f"{persona}"
        with user():
            lm += f"""
            ### Task Description:
            1. Read the following 3 responses.
            2. "A" and "B" are original responses, and "P" was generated by modifying one of the original responses.
            3. Identify which of the original responses the modified text was derived from.
            
            Modified text: {kwargs["P"]}
            ___________________________________________________________
            Original response A: {kwargs["A"]}
            __________________________________________________________
            Original response B: {kwargs["B"]}
            __________________________________________________________
            Which response does the modified text come from?

            Here are some tips for deciding which response the modified text comes from:
            - Look for specific details that are unique to one of the responses
            - Identify the key words or phrases that are present in the modified text and one of the responses
            - Consider the structure and style of the responses
            """
        with assistant():
            lm += f"""\
            I compared the modified text's key themes, structure, and specific details with those in the original responses to identify the closest match.
            I analyzed the modified text for unique details including key words and phrases that are present in one of the original responses.
            I believe the modified text was derived from original response {select(["A", "B"], name="choice")}.
            """
        return lm

    @property
    def input_keys(self):
        return ["P"]

    @property
    def output_keys(self):
        return ["choice"]

class LogicGPT(Distinguisher):
    @staticmethod
    @guidance
    def prompt_fn(lm, persona, **kwargs):
        if persona:
            with system():
                lm += f"{persona}"
        with user():
            lm += f"""
            Modified text: {kwargs["P"]}
            ___________________________________________________________
            Original response A: {kwargs["A"]}
            __________________________________________________________
            Original response B: {kwargs["B"]}
            __________________________________________________________
            Which response does the modified text come from?

            Here are some tips for deciding which response the modified text comes from:
            - Look for specific details that are unique to one of the responses
            - Identify the key words or phrases that are present in the modified text and one of the responses
            - Consider the structure and style of the responses
            """
        with assistant():
            lm += f"""{gen(name="reason", max_tokens=100)}"""
        with user():
            lm += f"""Reply with only one character containing your answer."""
        with assistant():
            lm += f"""{gen(name="choice", regex="A|B", max_tokens=1)}"""
        return lm

    @property
    def input_keys(self):
        return ["P"]

    @property
    def output_keys(self):
        return ["choice", "reason"]

class LogicGPTrev(Distinguisher):
    @staticmethod
    @guidance
    def prompt_fn(lm, persona, **kwargs):
        if persona:
            with system():
                lm += f"{persona}"
        with user():
            lm += f"""
            Modified text: {kwargs["P"]}
            ___________________________________________________________
            Original response A: {kwargs["A"]}
            __________________________________________________________
            Original response B: {kwargs["B"]}
            __________________________________________________________
            Which response does the modified text come from?

            Here are some tips for deciding which response the modified text comes from:
            - Look for specific details that are unique to one of the responses
            - Identify the key words or phrases that are present in the modified text and one of the responses
            - Consider the structure and style of the responses

            Reply with only one character containing your answer.
            """
        with assistant():
            lm += f"""{gen(name="choice", regex="A|B", max_tokens=1)}"""
        with user():
            lm += f"""Briefly explain why you chose this response."""
        with assistant():
            lm += f"""{gen(name="reason", max_tokens=100)}"""
        return lm

    @property
    def input_keys(self):
        return ["P"]

    @property
    def output_keys(self):
        return ["choice", "reason"]